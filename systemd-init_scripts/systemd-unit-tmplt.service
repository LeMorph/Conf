# Suppose there is a vendor-supplied unit /usr/lib/systemd/system/httpd.service

[Unit]
Description=Some HTTP server
After=remote-fs.target sqldb.service
Requires=sqldb.service
AssertPathExists=/srv/webserver

[Service]
Type=notify
ExecStart=/usr/sbin/some-fancy-httpd-server
Nice=5

[Install]
WantedBy=multi-user.target

# Now one wants to change some settings as an administrator: firstly, in the local setup, 
# + /srv/webserver might not exist, because the HTTP server is configured to use /srv/www 
# + instead. Secondly, the local configuration makes the HTTP server also depend on a memory 
# + cache service, memcached.service, that should be pulled in (Requires=) and also be 
# + ordered appropriately (After=). Thirdly, in order to harden the service a bit more, the 
# + administrator would like to set the PrivateTmp= setting (see systemd.service(5) for 
# + details). And lastly, the administrator would like to reset the niceness of the service 
# + to its default value of 0.

The first possibility is to copy the unit file to /etc/systemd/system/httpd.service and 
change the chosen settings:

[Unit]
Description=Some HTTP server
After=remote-fs.target sqldb.service memcached.service
Requires=sqldb.service memcached.service
AssertPathExists=/srv/www

[Service]
Type=notify
ExecStart=/usr/sbin/some-fancy-httpd-server
Nice=0
PrivateTmp=yes

[Install]
WantedBy=multi-user.target

# Alternatively, the administrator could create a drop-in file 
# + /etc/systemd/system/httpd.service.d/local.conf with the following contents:

[Unit]
After=memcached.service
Requires=memcached.service
# Reset all assertions and then re-add the condition we want
AssertPathExists=
AssertPathExists=/srv/www

[Service]
Nice=0
PrivateTmp=yes

# Note that dependencies (After=, etc.) cannot be reset to an empty list, so dependencies 
# + can only be added in drop-ins. If you want to remove dependencies, you have to override
# + the entire unit.
