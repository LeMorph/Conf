# Maintained via Ansible , last update on  {{ ansible_date_time.weekday }} {{ ansible_date_time.date }} at {{ ansible_date_time.time }} {{ ansible_date_time.tz }}.

# ================================================================================================ #
#
#                                   Peers
#
# ================================================================================================ #
peers loadbalancers
  {% for actual in hapee.actuals %}
  peer {{ actual.name }} {{ actual.address }}:1234
  {% endfor %}

# ================================================================================================ #
#
#                                   Global
#
# ================================================================================================ #
global
  log                             127.0.0.1 local1
  
  ## DEFINED IN SERVICE FILE chroot                          /var/empty
  ## DEFINED IN SERVICE FILE  pidfile      /var/run/hapee-{{ hapee.version }}/hapee-lb.pid

  maxconn                         {{ hapee.base.global.maxconn|d("10000") }}
  maxsslconn                      {{ hapee.base.global.maxsslconn|d("3500") }}
  tune.ssl.default-dh-param       {{ hapee.base.global.tune_ssl_default_dh_param|d("2048") }}
  spread-checks                   {{ hapee.base.global.spread_checks|d("2") }}

  user                            {{ hapee.user }}
  group                           {{ hapee.group }}
 
  stats socket       /var/run/hapee-{{ hapee.version }}/hapee-lb.sock user {{ hapee.user }} group {{ hapee.group }} mode 660 level admin
  stats timeout      10m
  module-path        /opt/hapee-{{ hapee.version }}/modules

  # module-load        hapee-lb-update.so
  # module-load        hapee-lb-sanitize.so

  #
  #   makes the process fork into background
  #
  daemon

  #
  # default ssl behavior
  #
  ssl-server-verify               none
  tune.ssl.cachesize              100000
  tune.ssl.lifetime               600
  ssl-default-bind-options        no-sslv3
  # ssl-default-bind-options        no-tlsv10

  #
  #   default certificate directory
  #
  ca-base                         /etc/hapee-{{ hapee.version }}/certs
  crt-base                        /etc/hapee-{{ hapee.version }}/certs

  #
  #   default ciphers to use on SSL-enabled listening sockets
  #
  ssl-default-bind-ciphers        ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
  ssl-default-server-ciphers      ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

# ================================================================================================ #
#
#                                   Defaults
#
# ================================================================================================ #
defaults
  #
  mode                            http

  #
  option                          httplog
  option                          dontlognull
  option                          log-health-checks
  option                          log-separate-errors

  #
  option                          forwardfor  except 127.0.0.0/8
  option                          http-server-close
  option                          redispatch

  #
  balance                         roundrobin                            # roundrobin load balancing strategy

  default-server                  maxconn {{ hapee.base.defaults.default_server.maxconn|d("1024") }}
  default-server                  inter {{ hapee.base.defaults.default_server.inter|d("3s") }} fall {{ hapee.base.defaults.default_server.fall|d("3") }} rise {{ hapee.base.defaults.default_server.rise|d("2") }} slowstart {{ hapee.base.defaults.default_server.slowstart|d("10s") }}  # specifies 3 second healthcheck interval with 3 failed
  #
  {% if hapee.base.defaults.default_server.downinter is defined %} 
  default-server                  downinter {{ hapee.base.defaults.default_server.downinter }} 
  {% endif %}

  retries                         3

  #
  timeout check                   3s
  timeout connect                 15s
  timeout client                  300s
  timeout server                  300s
  timeout http-request            3s
  timeout http-keep-alive         3s

  #
  maxconn                         4096           # sets frontend default maxconn

# ================================================================================================ #
#
#                                   Statistics
#
# ================================================================================================ #

listen                            stats
  log                             127.0.0.1 local2

  #
  mode                            http
  maxconn                         10

  #
  bind                            *:1936

  #
  stats                           enable
  stats                           show-node
  stats                           hide-version

  #
  stats refresh                   30s
  stats auth                      {{ hapee.stats.username }}:{{ hapee.stats.password }}
  stats uri                       /hapee?stats
  stats realm                     hapee-DT

#
# ------------------------------------FRONTENDS-----------------------------------------------------
#

{% for frontend in hapee.frontends %}

# ================================================================================================ #
#
#                                   {{ frontend.name }} - Frontend Service
#
# ================================================================================================ #
frontend {{ frontend.name }}-fe
  # log frontend activies
  log                             127.0.0.1 local3
  option                          log-separate-errors

  # The "disabled" keyword is used to disable a frontend instance
  {% if frontend.disabled is defined %}
  
  disabled
  {% endif %}

  # frontend to handle incoming http requests
  bind                            {{ frontend.address }}:{{ frontend.port|default(hapee.default.frontend_port) }}
  bind                            {{ frontend.address }}:443 ssl crt {{ frontend.cert }}{% if frontend.ssl_version is defined %} {{ frontend.ssl_version }}{% endif %}{% if frontend.ciphers is defined %} ciphers {{ frontend.ciphers }}{% endif %}{% if frontend.bind_ssl_maxconn is defined %} maxconn {{ frontend.bind_ssl_maxconn }}{% endif %}

  {% if frontend.tcp_mode is defined %}

  option tcplog
  mode tcp
  {% endif %}

  #
  {% if frontend.redirect is defined %}

  # force ssl redirect
  # returns true when the front connection is made via ssl transport
  acl secured                     ssl_fc

  # fetch and match the host header from the http request
  acl granted                     hdr(Host) -i -m sub     {{ frontend.realm  }}

  # redirect to https if initial request is http
  http-request redirect           scheme https code 301   if !secured

  # use defined backend server if host header request matches domain
  use_backend                     {{ frontend.name }}-be  if secured granted
  default_backend                 {{ frontend.name }}-be
  {% else %}

  # use default backend if all acls are false
  default_backend                 {{ frontend.name }}-be
  {% endif %}

{% endfor %}

#
# ------------------------------------BACKENDS------------------------------------------------------
#

{% for backend in hapee.backends %}

# ================================================================================================ #
#
#                                   {{ backend.name }} - Backend Service
#
# ================================================================================================ #

backend {{backend.name}}-be
  # log backend activites
  log                             127.0.0.1 local4

  #  sets ssl enabled header
  http-request    set-header      X-SSL-Enabled   true  if { ssl_fc }

  #  insert cookie containint backend server name (testing purposes only)
  cookie          SERVERID        insert indirect nocache

  #  server health-check
  {% if backend.skip_httpchk is defined %}

  option          httpchk         GET /
  http-check      expect rstatus  {{ backend.string }}
  {% else %}

  option          httpchk         GET {{ backend.httpchk }}
  http-check      expect string   {{ backend.string }}
  {% endif %}

  # tcp mode
  {% if backend.tcp_mode is defined %}

  option tcplog
  mode tcp
  {% endif %}

  # backend host specific variable checks

  {% if backend.timeout is defined %}

  timeout server  {{ backend.timeout }}
  {% endif %}

  {% if backend.keepalive is defined %}

  timeout http-keep-alive {{ backend.keepalive }}
  {% endif %}

  {% for server in backend.servers %}

  # backend server, health-check, cookie name and disabled state
  server {{ server.name }} {{ server.address }}:{{ backend.port|default(hapee.default.backend_port) }} check {% if backend.chk_port is defined %}port {{ backend.chk_port }} {% endif %}cookie {{ server.name }}{% if server.ciphers is defined %} ciphers {{ server.ciphers }}{% endif %}{% if server.maxconn is defined %} maxconn {{ server.maxconn }}{% endif %}{% if server.disabled is defined %} disabled {% endif %}

  {% endfor %}

{% endfor %}

#
# --------------------------------------------------------------------------------------------------
#

